% define_in.m 
%   Define input structure.
%
% Aeroassist Simulation source code
%
% Developed by:
%   Space Systems Design Lab
%   Daniel Guggenheim School of Aerospace Engineering
%   Georgia Institute of Technology
%
% Inputs:
%   none
%   
% Outputs:
%   in - data structure, misc, empty input data structure
%
% Major Revision History:
%   *Created SEP 2011, Z. Putnam
%   *3 NOV 2011, Z.R. Putnam, Added guidance data structures
%   *7 NOV 2011, Z.R. Putnam, replaced s.t_step with s.rate, added
%       s.data_rate
%   *8 NOV 2011, Z.R. Putnam, updated s.term data structure to accomodate
%       more complex termination logic
%   *22 NOV 2011, Z.R. Putnam, new GNC data structure
%   *3 FEB 2012, Z.R. Putnam, added Dream Chaser guidance structure
%   *21 FEB 2012, Z.R. Putnam, added basic Dream Chaser aerodynamics
%   *24 FEB 2012, Z.R. Putnam, added Dream Chaser aero properties, unit
%       conversions

function [in] = define_in()
%#codegen


%% Constants data structure

c1 = struct( ...
    'Pa2psf', double(0.0208854342), ...
    'm2nmi', double(0.000539956803), ...
    'm2mi', double(0.000621371192), ...
    'm2ft', double(3.2808399), ...
    'm2in', double(39.3700787), ...
    'r2d', double(57.2957795), ...
    'N2lbf', double(0.224808943), ...
    'kg2lbm', double(2.20462262), ...
    'J2BTU', double(0.00094781712), ...
    'K2degR', double(9/5), ...
    'earth_g', double(9.81) );


%% Simulation data structure

% Construct trajectory data structure
and_or = struct( ...
    'type', int8(zeros(5,1)), ...
    'var', uint8(zeros(5,1)), ...
    'value', double(zeros(5,1)), ...
    'direction', int8(zeros(5,1)) );

term = struct( ...
    'and', and_or, ...
    'or', and_or );

traj = struct( ...
    'rate', double(0), ...
    't_ini', double(0), ...
    't_max', double(0), ...   
    'aoa_ini', double(0), ...
    'bank_ini', double(0), ...
    'ssa_ini', double(0), ...
    'lat', double(0), ...
    'lon', double(0), ...
    'alt', double(0), ...
    'gamma_pp', double(0), ...
    'az', double(0), ...
    'dr_ini', double(0), ...
    'cr_ini', double(0), ...
    'vel_pp_mag', double(0), ...
    'r_pci_ini', zeros(3,1), ...
    'v_pci_ini', zeros(3,1) ...
    );

sigs = struct( ...      % 1 sigma uncertanties
    'm', double(0), ... %vehicle mass (kg)
    'cl', double(0), ...    % lift coeff
    'cd', double(0), ...    % drag coeff
    'aoa', double(0), ...   % angle of attack (rad)
    'v0', double(0), ...    % entry speed (m/s)
    'h0', double(0), ...    % atmospheric interface (m)
    'efpa', double(0), ...  % efpa (rad)
    'lat', double(0), ...   % lat (rad)
    'lon', double(0), ...   % lon (rad)
    'az', double(0), ...     % az (azimuth)
    'T_sens', double(0), ... %sensed temperature
    'P_sens', double(0), ...    %sensed pressure
    'imu_bias', double(0), ...  % gravity bias, earth G
    'imu_noise', zeros(3,3) ...  % [position, velocity, accel] noise
    );
    
% Construct simulation data structure
s = struct( ...
    'data_rate', double(1), ... % data storage rate (Hz)
    'term', term, ...   % termination condition structure
    'traj', traj, ...   % trajectory structure
    'sigs', sigs ...      % 1sigma uncertainty structure (for monte carlo)
    );


%% Planetary data structure

% Construct atmosphere data structure
atm = struct( ...
    'mode', uint8(0), ...
    'R', double(0), ...
    'gamma', double(0), ...
    'scale_height', double(0), ...
    'dens_ref', double(0), ...
    'pres_ref', double(0), ...
    'temp_ref', double(0), ...
    'table', zeros(1000,7) );

% Construct planetary data structure
p = struct( ...
    'planet', uint8(0), ...
    'r_e', double(0), ...
    'r_p', double(0), ...
    'r_m', double(0), ...
    'mass', double(0), ...    
    'mu', double(0), ...
    'surface_g', double(0), ...
    'j2', double(0), ...
    'k', double(0), ...
    'omega', zeros(3,1), ...
    'atm', atm );


%% Vehicle data structure

% Dream Chaser aerodynamics data - add to aero struct below if needed
% dc = define_aero_dc;
% dc_unc = define_aero_dc_unc;
% dc_act = define_aero_dc_act;

% Construct aerodynamics data structure
aero = struct( ...
    'mode', uint8(0), ...
    'dc_mode', uint8(0), ... % Dream Chaser full model aero mode, main aero mode must be set to 4
    'r_cg', zeros(3,1), ... % c.g. position vector, structural frame, m
    'r_cp', zeros(3,1), ... % c.p. position vector, structural frame, m
    'aoa', double(0), ... % constant angle-of-attack, rad
    'cl', double(0), ... % constant lift coefficient, nd
    'cd', double(0), ... % constant drag coefficient, nd
    'area_ref', double(0), ... % aerodynamic reference area, m^2
    'chord_ref', double(0), ... % aerodynamic reference chord, m
    'span_ref', double(0), ... % aerodynamic reference span, m
    'table', zeros(100,3), ... % mach-dependent cl and cd, nd
    'delta_c', double(45), ...  % sphere-cone half-angle (rad)
    'nose_radius', double(0) ); % effective nose radius, m

% Construct GNC data structure
guid = define_guid;
ctrl = define_ctrl;
nav = define_nav;
% guidance parameters
g = struct( ...
    'p', guid.p, ...
    'p_msl', guid.msl.p, ...
    'p_dej_n', guid.dej_n.p, ...
    'p_dcfj', guid.dcfj.p, ...
    'p_manual', guid.manual.p, ...
    'p_cvdma', guid.cvdma.p, ...
    'p_sej_e', guid.sej_e.p, ...
    'p_adm', guid.adm.p, ...
    'p_gt', guid.gt.p, ...
    'pd', guid.pd.p ...
    );
    
% navigation parameters
n = struct( ...
    'p', nav.p ...
    );
% control parameters
c2 = struct( ...
    'p', ctrl.p ...
    );
% GNC parameters
gnc = struct( ...
    'g', g, ...
    'n', n, ...
    'c', c2 ...
    );

% Construct propulsion data structure
main = struct( ...
    'isp', double(1), ... % must be non-zero
    'thrust_max', double(0) );
rcs = struct( ...
    'isp', double(1), ... % must be non-zero
    'thrust_max', double(0) );
prop = struct( ...
    'main', main, ...
    'rcs', rcs );
  
% Construct decelerator data structure
decel = struct( ...
    'mode', uint8(0), ...
    'd', double(0), ...
    'cd', double(0), ...
    'K', double(0), ...
    'table', double(zeros(44,4)) );
  
% Construct mass properties
mp = struct( ...
    'mode', uint8(0), ...
    'm_ini', double(0), ...
    'm_ini_mainfuel', double(0), ...
    'm_ini_rcsfuel', double(0), ...
    'm_jettison', double(0), ...
    'cg', zeros(3,1), ...
    'delta_cg', zeros(3,1), ...
    't1', double(0), ...
    't2', double(0) );

% Construct vehicle data structure
v = struct( ...
    'aero', aero, ...
    'gnc', gnc, ...
    'prop', prop, ...
    'decel', decel, ...
    'mp', mp );


%% Construct combined input data structure

in = struct( ...
    'c', c1, ...    
    's', s, ...
    'p', p, ...
    'v', v );

end % define_in()